Index: src/Toran/ProxyBundle/Service/RepoSyncer.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Toran/ProxyBundle/Service/RepoSyncer.php	(revision 68f908f35a4ef06a2c1476ca486b2b04494214af)
+++ src/Toran/ProxyBundle/Service/RepoSyncer.php	(revision )
@@ -75,7 +75,12 @@
                 // update providers so the file we generate has all names complete
                 foreach ($repositories[$index]->getNames() as $name) {
                     if (!isset($providers[$name])) {
-                        $providers[$name] = array('sha256' => null);
+                        //$providers[$name] = array('sha256' => null);
+                        //============@nguyenphuongthanhf: start ===========
+                        $providerDir = $this->outputDir.'/p'.'/';
+                        $json_path = $name.'.json';
+                        $providers[$name] = array('sha256' => $this->sha256($providerDir, $json_path));
+                        //============@nguyenphuongthanhf: end ===========
                     }
                 }
 
@@ -115,6 +120,7 @@
         // dump json after syncing dist/source since they can modify the dist url and such
         $this->dumpPackageJson($packages, $this->outputDir.'/p', $io);
 
+
         // update toran_package_names & providers
         $names = array();
         foreach ($packages as $package) {
@@ -122,7 +128,11 @@
                 $names[$package->getName()] = $package->getPrettyName();
             }
             if (!isset($providers[$package->getName()])) {
-                $providers[$package->getName()] = array('sha256' => null);
+                // @nguyenphuongthanhf: fix generate sha256 for packages.json
+                $providerDir = $this->outputDir.'/p'.'/';
+                $json_path = $package->getName().'.json';
+                $providers[$package->getName()] = array('sha256' => $this->sha256($providerDir, $json_path));
+                //$providers[$package->getName()] = array('sha256' => null);
             }
         }
         $this->config->setRepositoryPackageNames($repositories[$index], array_values($names));
@@ -131,6 +141,22 @@
         return $providers;
     }
 
+    /**
+     * @author nguyenphuongthanhf
+     * @param $providerDir
+     * @param $file
+     *
+     * @return null|string
+     */
+    public function sha256($providerDir, $file)
+    {
+        if (file_exists($providerDir.$file)) {
+            return hash_file('sha256', $providerDir.$file);
+        }
+
+        return null;
+    }
+
     public function getJsonMetadataPath($packageName)
     {
         return $this->outputDir.'/p/'.strtolower($packageName).'.json';
